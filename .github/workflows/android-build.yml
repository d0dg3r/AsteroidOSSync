name: Android CI
on:
  push:
    branches: ['**']
  pull_request:
    branches: [ "master" ]
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      # Debug step to check Java installation
      - name: Debug Java Installation
        run: |
          java -version
          echo "JAVA_HOME: $JAVA_HOME"
          
      # Debug step to check environment
      - name: Debug Environment
        run: |
          echo "GitHub Ref: ${{ github.ref }}"
          echo "Event Name: ${{ github.event_name }}"
          pwd
          ls -la

      - name: Decode Keystore
        if: github.event_name == 'release' || github.ref == 'refs/heads/master'
        run: |
          echo "${{ secrets.KEYSTORE }}" > keystore.b64
          base64 -d keystore.b64 > app/release-key.jks
          rm keystore.b64
          # Verify keystore file
          ls -l app/release-key.jks || echo "Keystore file not created"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Debug step to check Gradle configuration
      - name: Debug Gradle Setup
        run: |
          ./gradlew --version
          ./gradlew projects
          
      - name: Build Debug APK with detailed logging
        run: |
          ./gradlew assembleDebug --stacktrace --info --scan
          
      - name: Build Release APK with detailed logging
        if: github.event_name == 'release' || github.ref == 'refs/heads/master'
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: |
          ./gradlew assembleRelease --stacktrace --info --scan
          
      # Debug step to check build outputs
      - name: List Build Outputs
        run: |
          echo "Debug APK directory:"
          ls -R app/build/outputs/apk/debug/
          echo "Release APK directory:"
          ls -R app/build/outputs/apk/release/

      - name: Upload Debug APK
        uses: actions/upload-artifact@v3
        with:
          name: AsteroidOSSync_d0dger-debug
          path: app/build/outputs/apk/debug/*.apk

      - name: Upload Release APK
        if: github.event_name == 'release' || github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v3
        with:
          name: AsteroidOSSync_d0dger-release
          path: app/build/outputs/apk/release/*.apk

      - name: Rename APKs
        if: github.event_name == 'release'
        run: |
          mkdir -p artifacts
          cp app/build/outputs/apk/release/*.apk artifacts/AsteroidOSSync_d0dger.apk
          ls -l artifacts/

      - name: Upload Release Assets
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/AsteroidOSSync_d0dger.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload build logs as artifacts
      - name: Upload Build Logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build-logs
          path: |
            app/build/reports/
            ~/.gradle/daemon/
            app/build/outputs/logs/
